{"mappings":"AAAA,MAAM,SAAS,CAAC,QACd;WAAI;KAAM,CACP,IAAI,CAAC,GAAG,IAAM;YAAC,EAAE,WAAW;YAAI;SAAE,EAClC,OACA,QAAQ,CAAC,IAAM,GACf,KAAK,KACL,MAAM,MACN,QAAQ,CAAC,GAAG,IAAM,IAAI,MAAM,KAAK,MAAM,IAAI,IAAI,IAAI,GAAG,KAAK,AAAC,CAAA,IAAI,CAAA,IAAK,IACrE,KAAK,IACL,QAAQ,gBAAgB,CAAC,IAAM,CAAC,EAAE,CAAC,IAAI,MAAM,IAAI,EAAE,EAAE,OAAO,CAAC,GAE9D;;;;;;;uQAOmQ","sources":["src/index.js"],"sourcesContent":["const encode = (input) =>\r\n  [...input]\r\n    .map((x, i) => [x.charCodeAt(0), i])\r\n    .sort()\r\n    .flatMap((x) => x)\r\n    .join(\".\")\r\n    .match(/./g)\r\n    .flatMap((x, i) => new Array(x == \".\" ? 1 : 2 + x * 2).fill((1 + i) % 2))\r\n    .join(\"\")\r\n    .replace(/(([01])\\2*)/g, (x) => `${+x ? \".\" : \"-\"}${x.length}`);\r\n\r\n    /*Эта функция не является обратимой, потому что она теряет информацию при кодировании переменной. Каждому значению переменной может соответствовать несколько закодированных значений, поэтому невозможно однозначно восстановить исходную переменную из её закодированного значения.\r\n     1. При сортировке символов методом sort(). Если в исходном входном массиве были символы с одинаковыми кодами, то после сортировки они будут расположены в произвольном порядке, и мы не сможем восстановить исходную последовательность символов.\r\n\r\n2. При преобразовании отсортированного массива в строку методом join('.'). Если исходный массив содержал точки, то они будут заменены на символы '.', и мы не сможем различить между собой исходные точки и добавленные при преобразовании в строку.\r\n\r\n3. При разбиении строки на блоки методом match(/./g). Если исходная строка содержала последовательности одинаковых символов, то они будут объединены в один блок, и мы не сможем различить между собой исходные последовательности и добавленные при разбиении.\r\n\r\n4. При замене блоков на коды методом replace(/(([01])\\2*)/g, x => ${(+x ? '.' : '-')}${x.length}). Если исходный блок содержал только символы '0' или только символы '1', то он будет заменен на код длины 1, и мы не сможем различить между собой блоки разной длины. */\r\n\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}